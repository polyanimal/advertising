// Code generated by MockGen. DO NOT EDIT.
// Source: usecase_mock.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/polyanimal/advertising/internal/models"
)

// MockUseCase is a mock of UseCase interface.
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase.
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance.
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// CreateAdvertisement mocks base method.
func (m *MockUseCase) CreateAdvertisement(arg0 models.Advertisement) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdvertisement", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAdvertisement indicates an expected call of CreateAdvertisement.
func (mr *MockUseCaseMockRecorder) CreateAdvertisement(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdvertisement", reflect.TypeOf((*MockUseCase)(nil).CreateAdvertisement), arg0)
}

// GetAdvertisement mocks base method.
func (m *MockUseCase) GetAdvertisement(ID string) (models.Advertisement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdvertisement", ID)
	ret0, _ := ret[0].(models.Advertisement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdvertisement indicates an expected call of GetAdvertisement.
func (mr *MockUseCaseMockRecorder) GetAdvertisement(ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdvertisement", reflect.TypeOf((*MockUseCase)(nil).GetAdvertisement), ID)
}

// GetAllAdvertisements mocks base method.
func (m *MockUseCase) GetAllAdvertisements(options *models.Options) ([]models.Advertisement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllAdvertisements", options)
	ret0, _ := ret[0].([]models.Advertisement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllAdvertisements indicates an expected call of GetAllAdvertisements.
func (mr *MockUseCaseMockRecorder) GetAllAdvertisements(options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllAdvertisements", reflect.TypeOf((*MockUseCase)(nil).GetAllAdvertisements), options)
}
