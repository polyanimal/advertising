// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/polyanimal/advertising/internal/models"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// CreateAdvertisement mocks base method.
func (m *MockRepository) CreateAdvertisement(arg0 models.Advertisement) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAdvertisement", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAdvertisement indicates an expected call of CreateAdvertisement.
func (mr *MockRepositoryMockRecorder) CreateAdvertisement(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAdvertisement", reflect.TypeOf((*MockRepository)(nil).CreateAdvertisement), arg0)
}

// GetAdvertisement mocks base method.
func (m *MockRepository) GetAdvertisement(ID string) (models.Advertisement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdvertisement", ID)
	ret0, _ := ret[0].(models.Advertisement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdvertisement indicates an expected call of GetAdvertisement.
func (mr *MockRepositoryMockRecorder) GetAdvertisement(ID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdvertisement", reflect.TypeOf((*MockRepository)(nil).GetAdvertisement), ID)
}

// GetAllAdvertisements mocks base method.
func (m *MockRepository) GetAllAdvertisements(options *models.Options) ([]models.Advertisement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllAdvertisements", options)
	ret0, _ := ret[0].([]models.Advertisement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllAdvertisements indicates an expected call of GetAllAdvertisements.
func (mr *MockRepositoryMockRecorder) GetAllAdvertisements(options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllAdvertisements", reflect.TypeOf((*MockRepository)(nil).GetAllAdvertisements), options)
}
